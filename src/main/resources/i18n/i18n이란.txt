i18n(Internationalization)이란?
- i와 n 사이에 18개의 문자가 있어서 i18n이라고 함.
- 국제화를 위한 기능을 의미
- 다국어 지원을 위한 리소스 관리

-메시지 프로퍼티 파일들
- 메시지 프로퍼티 파일들은 각 언어별로 폴더를 만들어서 관리
- 파일명은 항상 messages.properties로 고정
- 파일 내용은 key=value 형태로 작성
- 예시 : messages_ko.properties, messages_en.properties

# messages.properties (기본 메시지)
app.msg.crud.create.success = 등록되었습니다.

# messages_ko_KR.properties (한국어)
app.msg.crud.create.success = 등록되었습니다.

# messages_en_US.properties (영어)
app.msg.crud.create.success = Registration successful.

[사용 예]
@Autowired
private MessageSource messageSource;

public String getMessage() {
    // 현재 로케일에 맞는 메시지 반환
    return messageSource.getMessage(
        "app.msg.crud.create.success",  // 메시지 키
        null,                           // 파라미터
        LocaleContextHolder.getLocale() // 현재 로케일
    );
}

[설정 예]
@Configuration
public class MessageConfig {
    @Bean
    public MessageSource messageSource() {
        ReloadableResourceBundleMessageSource messageSource = new ReloadableResourceBundleMessageSource();
        messageSource.setBasename("classpath:/i18n/messages");
        messageSource.setDefaultEncoding("UTF-8");
        return messageSource;
    }
}

* 지금의 경우 US 파일에 한국어가 들어가 있으므로 다국어 지원이 안됨.
다국어를 원하는거라면 US 파일들은
# error
error.test=Error!!!

# crud messages
app.msg.crud.create.success = Successfully registered.
app.msg.crud.create.failure = Registration failed.
app.msg.crud.read.success = Successfully retrieved.
app.msg.crud.read.failure = Retrieval failed.
app.msg.crud.update.success = Successfully updated.
app.msg.crud.update.failure = Update failed.
app.msg.crud.delete.success = Successfully deleted.
app.msg.crud.delete.failure = Deletion failed.

# auth messages
app.msg.auth.valid = Authentication successful.
app.msg.auth.invalid = Authentication failed.

이렇게 되야함